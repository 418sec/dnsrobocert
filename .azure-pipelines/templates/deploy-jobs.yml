jobs:
  - job: pypi
    pool:
      vmImage: ubuntu-18.04
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: python-dist
          path: $(Build.SourcesDirectory)/dist
        displayName: Retrieve Python dist
      - task: UsePythonVersion@0
        inputs:
          versionSpec: 3.8
          addToPath: true
        displayName: Install Python
      - script: |
          python -m pip install -U pip
          pip install twine
        displayName: Prepare environment
      - task: TwineAuthenticate@1
        displayName: Authenticate against PyPI

  - job: docker
    pool:
      vmImage: ubuntu-18.04
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: docker
          path: $(Build.SourcesDirectory)/docker
        displayName: Retrieve Docker image from artifacts
      - task: UsePythonVersion@0
        inputs:
          versionSpec: 3.8
          addToPath: true
        displayName: Install Python
      - script: |
          python -m pip install -U pip
          pip install poetry
        displayName: Prepare environment
      - script: |
          docker load < docker/dnsrobocert.tar.gz
        displayName: Load Docker image
      - task: Docker@2
        inputs:
          command: login
          containerRegistry: docker-hub
        displayName: Login to DockerHub
      - script: |
          version=`poetry version | awk '{print $2}'`
          echo "Docker tag is: $version"
          docker tag adferrand/dnsrobocert adferrand/dnsrobocert:$version
          # LEGACY DEPLOY
          docker tag adferrand/dnsrobocert adferrand/docker-letsencrypt-dns
          docker tag adferrand/dnsrobocert adferrand/docker-letsencrypt-dns:$version
        displayName: Tag Docker images

  - job: github_release
    pool:
      vmImage: ubuntu-18.04
    dependsOn:
      - pypi
      - docker
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: changelog
          path: $(Build.SourcesDirectory)/changelog
        displayName: Retrieve release changelog
      - script: |
          cat changelog/release_changelog.md
