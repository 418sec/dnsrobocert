jobs:
  - job: pypi
    pool:
      vmImage: ubuntu-18.04
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: 3.8
          addToPath: true
        displayName: Install Python
      - script: |
          python -m pip install -U pip
          pip install poetry
        displayName: Prepare environment
      - script: |
          poetry build
        displayName: Build Python dist
      - task: CopyFiles@2
        inputs:
          sourceFolder: $(System.DefaultWorkingDirectory)/dist
          targetFolder: $(Build.ArtifactStagingDirectory)
        displayName: Prepare Python dist for artifacts
      - task: PublishPipelineArtifact@1
        inputs:
          path: $(Build.ArtifactStagingDirectory)
          artifact: windows-installer
        displayName: Publish Python dist to artifacts

  - job: docker
    pool:
      vmImage: ubuntu-18.04
    steps:
      - script: |
          docker pull adferrand/dnsrobocert || true
          docker build --pull --cache-from adferrand/dnsrobocert -t adferrand/dnsrobocert .
        displayName: Build Docker image
      - script: |
          mkdir -p ./bin
          curl -fsSL https://goss.rocks/install | GOSS_DST=./bin sh
          GOSS_PATH=./bin/goss GOSS_SLEEP=5 GOSS_FILES_PATH=./test/goss ./bin/dgoss run adferrand/dnsrobocert
        displayName: Check Docker container runtime
      - script: |
          docker save adferrand/dnsrobocert > $(Build.ArtifactStagingDirectory)/dnsrobocert.tar
        displayName: Archive Docker image
      - task: PublishPipelineArtifact@1
        inputs:
          path: $(Build.ArtifactStagingDirectory)
          artifact: docker
        displayName: Publish Docker image to artifacts
