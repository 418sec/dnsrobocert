jobs:
  - job: test
    strategy:
      matrix:
        macos-py36:
          IMAGE_NAME: macOS-10.14
          PYTHON_VERSION: 3.6
          TOXENV: py36
        macos-py38:
          IMAGE_NAME: macOS-10.14
          PYTHON_VERSION: 3.8
          TOXENV: py38
        windows-py36:
          IMAGE_NAME: windows-2019
          PYTHON_VERSION: 3.6
          TOXENV: py36
        windows-py38:
          IMAGE_NAME: windows-2019
          PYTHON_VERSION: 3.8
          TOXENV: py38
        linux-py36:
          IMAGE_NAME: ubuntu-18.04
          PYTHON_VERSION: 3.6
          TOXENV: py36
        linux-py38-cover:
          IMAGE_NAME: ubuntu-18.04
          PYTHON_VERSION: 3.8
          TOXENV: py38-cover
    pool:
      vmImage: $(IMAGE_NAME)
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: $(PYTHON_VERSION)
          addToPath: true
        displayName: Install Python
      - script: |
          python -m pip install -U pip
          pip install poetry tox
        displayName: Prepare environment
      - script: |
          tox
        displayName: Run tox env(s)
      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFiles: '**/test-*.xml'
          testRunTitle: 'Publish test results for Python $(PYTHON_VERSION) on $(IMAGE_NAME)'
        displayName: Publish tests reports
      - task: PublishCodeCoverageResults@1
        condition: eq(variables['TOXENV'], 'py38-cover')
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
          reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
        displayName: Publish coverage reports

  - job: quality
    strategy:
      matrix:
        flake8:
          TOXENV: flake8
        mypy:
          TOXENV: mypy
    pool:
      vmImage: ubuntu-18.04
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: 3.8
          addToPath: true
        displayName: Install Python
      - script: |
          python -m pip install -U pip
          pip install poetry tox
        displayName: Prepare environment
      - script: |
          tox
        displayName: Run tox env(s)
