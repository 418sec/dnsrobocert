version: 2

workflows:
  version: 2
  main-pipeline:
    jobs:
      - build-n-test-amd64:
          filters:
            tags:
              only: /^[0-9.]+/
      - build-n-test-arm64:
          filters:
            tags:
              only: /^[0-9.]+/
      - deploy:
          requires: 
            - build-n-test-amd64
            - build-n-test-arm64
          filters:
            branches:
              only: master
            tags:
              only: /^[0-9.]+/
      - trigger-dockerhub:
          requires: 
            - build-n-test-amd64
            - build-n-test-arm64
          filters:
            branches:
              only: master

jobs:
  build-n-test-amd64:
    machine: true
    steps:
      - checkout
      - run:
          name: Install latest docker
          command: |
            curl -fsSL https://get.docker.com -o get-docker.sh
            sh get-docker.sh
            sudo sh -c 'echo '\''DOCKER_OPTS="--experimental=true"'\'' >> /etc/default/docker'
            sudo service docker restart
      - run:
          name: Build container
          command: |
            docker pull --platform amd64 adferrand/letsencrypt-dns || true
            docker build --platform amd64 --pull --cache-from adferrand/letsencrypt-dns -t adferrand/letsencrypt-dns:amd64 .
      - run:
          name: Test container
          command: |
            mkdir -p ./bin
            curl -fsSL https://goss.rocks/install | GOSS_DST=./bin sh
            GOSS_PATH=./bin/goss GOSS_SLEEP=5 GOSS_FILES_PATH=./tests ./bin/dgoss run -e LETSENCRYPT_SKIP_REGISTER=true adferrand/letsencrypt-dns:amd64
      - run:
          name: Save container
          command: |
            mkdir -p workspace
            docker save adferrand/letsencrypt-dns:amd64 | gzip -c -1 > workspace/docker-letsencrypt-dns.amd64.tar.gz
      - persist_to_workspace:
          root: workspace
          paths:
            - docker-letsencrypt-dns.amd64.tar.gz
  build-n-test-arm64:
    machine: true
    steps:
      - checkout
      - run:
          name: Install latest docker
          command: |
            curl -fsSL https://get.docker.com -o get-docker.sh
            sh get-docker.sh
            sudo sh -c 'echo '\''DOCKER_OPTS="--experimental=true"'\'' >> /etc/default/docker'
            sudo service docker restart
      - run:
          name: Build container
          command: |
            docker pull --platform arm64 adferrand/letsencrypt-dns || true
            docker build --platform arm64 --pull --cache-from adferrand/letsencrypt-dns -t adferrand/letsencrypt-dns:arm64 .
      - run:
          name: Test container
          command: |
            mkdir -p ./bin
            curl -fsSL https://goss.rocks/install | GOSS_DST=./bin sh
            GOSS_PATH=./bin/goss GOSS_SLEEP=5 GOSS_FILES_PATH=./tests ./bin/dgoss run -e LETSENCRYPT_SKIP_REGISTER=true adferrand/letsencrypt-dns:arm64
      - run:
          name: Save container
          command: |
            mkdir -p workspace
            docker save adferrand/letsencrypt-dns:arm64 | gzip -c -1 > workspace/docker-letsencrypt-dns.arm64.tar.gz
      - persist_to_workspace:
          root: workspace
          paths:
            - docker-letsencrypt-dns.arm64.tar.gz
  deploy:
    machine: true
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load container
          command:
            docker load < /tmp/workspace/docker-letsencrypt-dns.tar.gz
      - run:
          name: Login to DockerHub
          command:
            echo "${DOCKER_PASS}" | docker login -u ${DOCKER_USER} --password-stdin
      - deploy:
          name: Deploy to DockerHub
          command: |
            if [ ${CIRCLE_BRANCH} = master ]; then
              DOCKER_TAG=latest
            else
              DOCKER_TAG=${CIRCLE_TAG:-${CIRCLE_BRANCH}}
            fi
            docker tag adferrand/letsencrypt-dns adferrand/letsencrypt-dns:${DOCKER_TAG}
            docker push adferrand/letsencrypt-dns:${DOCKER_TAG}
  trigger-dockerhub:
    machine: true
    steps:
      - deploy:
          name: Trigger DockerHub build
          command: |
            curl -H "Content-Type: application/json" --data '{"docker_tag": "master"}' -X POST https://registry.hub.docker.com/u/adferrand/letsencrypt-dns/trigger/6c5088a3-df29-4bb3-9843-69dbe32b2e1f/
