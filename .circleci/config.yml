version: 2

workflows:
  version: 2
  main-pipeline:
    jobs:
      - build-n-test:
          filters:
            tags:
              only: /^[0-9.]+/
      - deploy:
          requires: 
            - build-n-test
          filters:
            branches:
              only: master
            tags:
              only: /^[0-9.]+/
      - trigger-dockerhub:
          requires: 
            - build-n-test
          filters:
            branches:
              only: master

jobs:
  build-n-test:
    machine: true
    steps:
      - checkout
      - run:
          name: Build container
          command: |
            docker pull adferrand/dnsrobocert || true
            docker build --pull --cache-from adferrand/dnsrobocert -t adferrand/dnsrobocert .
      - run:
          name: Test container
          command: |
            mkdir -p ./bin
            curl -fsSL https://goss.rocks/install | GOSS_DST=./bin sh
            GOSS_PATH=./bin/goss GOSS_SLEEP=5 GOSS_FILES_PATH=./tests ./bin/dgoss run -e LETSENCRYPT_SKIP_REGISTER=true adferrand/dnsrobocert
      - run:
          name: Save container
          command: |
            mkdir -p workspace
            docker save adferrand/dnsrobocert | gzip -c -1 > workspace/dnsrobocert.tar.gz
      - persist_to_workspace:
          root: workspace
          paths:
            - dnsrobocert.tar.gz
  deploy:
    machine: true
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load container
          command:
            docker load < /tmp/workspace/dnsrobocert.tar.gz
      - run:
          name: Login to DockerHub
          command:
            echo "${DOCKER_PASS}" | docker login -u ${DOCKER_USER} --password-stdin
      - deploy:
          name: Deploy to DockerHub
          command: |
            if [ ${CIRCLE_BRANCH} = master ]; then DOCKER_TAG=latest; else DOCKER_TAG=${CIRCLE_TAG:-${CIRCLE_BRANCH}}; fi
            docker tag adferrand/dnsrobocert adferrand/dnsrobocert:${DOCKER_TAG}
            docker push adferrand/dnsrobocert:${DOCKER_TAG}
